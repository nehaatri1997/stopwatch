# -*- coding: utf-8 -*-
"""stopwatch.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eq2dk_VGVqM1WmrjYQm7m7ugFAMj28RF
"""

from datetime import datetime, timedelta

def calculate_cycle_length(period_dates):
    cycle_lengths = []
    for i in range(1, len(period_dates)):
        # Calculate the difference between consecutive periods
        delta = (period_dates[i] - period_dates[i - 1]).days
        cycle_lengths.append(delta)

    # Return the average cycle length
    if cycle_lengths:
        return sum(cycle_lengths) // len(cycle_lengths)
    else:
        return 28  # Default cycle length

def predict_next_period(period_dates):
    avg_cycle_length = calculate_cycle_length(period_dates)
    last_period = period_dates[-1]
    next_period = last_period + timedelta(days=avg_cycle_length)
    return next_period

def get_dates():
    num_periods = int(input("How many period dates would you like to enter? "))
    period_dates = []
    for _ in range(num_periods):
        date_str = input("Enter period date (YYYY-MM-DD): ")
        period_date = datetime.strptime(date_str, "%Y-%m-%d")
        period_dates.append(period_date)
    return period_dates

def main():
    period_dates = get_dates()
    next_period = predict_next_period(period_dates)
    print(f"Your next period is predicted to be on: {next_period.strftime('%Y-%m-%d')}")

if __name__ == "__main__":
    main()